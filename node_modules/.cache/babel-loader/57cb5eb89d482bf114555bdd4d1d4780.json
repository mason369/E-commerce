{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"TypeNav\",\n  data() {\n    return {\n      show: true\n    };\n  },\n  mounted() {\n    //如果不是home组件，将typenav组件隐藏\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  },\n  computed: {\n    ...mapState({\n      categoryList: state => state.home.categoryList\n    })\n  },\n  methods: {\n    enterShow() {\n      this.show = true;\n    },\n    leaveShow() {\n      //判断如果是Search路由组件的时候才会执行\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    },\n    goSearch(event) {\n      //event.target:获取到的是出发事件的元素(div、h3、a、em、dt、dl)\n      let node = event.target;\n      //给a标签添加自定义属性data-categoryName,全部的字标签当中只有a标签带有自定义属性，别的标签名字----dataset纯属扯淡\n      let {\n        categoryname,\n        category1id,\n        category2id,\n        category3id\n      } = node.dataset;\n      //第二个问题解决了：点击的到底是不是a标签（只要这个标签身上带有categoryname）一定是a标签\n      //当前这个if语句：一定是a标签才会进入\n      if (categoryname) {\n        //准备路由跳转的参数对象\n        let loction = {\n          name: \"search\"\n        };\n        let query = {\n          categoryName: categoryname\n        };\n        //一定是a标签：一级目录\n        if (category1id) {\n          query.category1Id = category1id;\n          //一定是a标签：二级目录\n        } else if (category2id) {\n          query.category2Id = category2id;\n          //一定是a标签：三级目录\n        } else {\n          query.category3Id = category3id;\n        }\n        //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\n        if (this.$route.params) {\n          loction.params = this.$route.params;\n          //动态给location配置对象添加query属性\n          loction.query = query;\n          //路由跳转\n          this.$router.push(loction);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA8CA;AAEA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACA;MACA;MACA;QACA;QACA;UAAAb;QAAA;QACA;UAAAc;QAAA;QACA;QACA;UACAC;UACA;QACA;UACAA;UACA;QACA;UACAA;QACA;QACA;QACA;UACAC;UACA;UACAA;UACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","show","mounted","computed","categoryList","methods","enterShow","leaveShow","goSearch","categoryname","category1id","category2id","category3id","categoryName","query","loction"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\n    <!-- 商品分类导航 -->\n    <div class=\"type-nav\">\n        <div class=\"container\">\n            <div @mouseleave=\"leaveShow\" @mouseenter=\"enterShow\">\n                <div class=\"mask\"></div>\n                <transition name=\"sort\">\n                    <div class=\"sort\" v-show=\"show\">\n                        <div class=\"all-sort-list2\" @click=\"goSearch\">\n                            <div class=\"item\" v-for=\"(c1, index) in categoryList.slice(0, 16)\" :key=\"c1.categoryId\">\n                                <h3>\n                                    <a>{{ c1.categoryName }}</a>\n                                </h3>\n                                <div class=\"item-list clearfix\">\n                                    <div class=\"subitem\" v-for=\"(c2, index) in c1.categoryChild\" :key=\"c2.categoryId\">\n                                        <dl class=\"fore\">\n                                            <dt>\n                                                <a\n                                                    :data-categoryName=\"c2.categoryName\"\n                                                    :data-category2Id=\"c2.categoryId\"\n                                                    >{{ c2.categoryName }}</a\n                                                >\n                                            </dt>\n                                            <dd>\n                                                <em v-for=\"(c3, index) in c2.categoryChild\" :key=\"c3.categoryId\">\n                                                    <a\n                                                        :data-categoryName=\"c3.categoryName\"\n                                                        :data-category3Id=\"c3.categoryId\"\n                                                        >{{ c3.categoryName }}</a\n                                                    >\n                                                </em>\n                                            </dd>\n                                        </dl>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </transition>\n            </div>\n        </div>\n        <Nav></Nav>\n    </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n    name: \"TypeNav\",\n    data() {\n        return {\n            show: true,\n        };\n    },\n    mounted() {\n        //如果不是home组件，将typenav组件隐藏\n        if (this.$route.path != \"/home\") {\n            this.show = false;\n        }\n    },\n    computed: {\n        ...mapState({\n            categoryList: (state) => state.home.categoryList,\n        }),\n    },\n    methods: {\n        enterShow() {\n            this.show = true;\n        },\n        leaveShow() {\n            //判断如果是Search路由组件的时候才会执行\n            if (this.$route.path != \"/home\") {\n                this.show = false;\n            }\n        },\n        goSearch(event) {\n            //event.target:获取到的是出发事件的元素(div、h3、a、em、dt、dl)\n            let node = event.target;\n            //给a标签添加自定义属性data-categoryName,全部的字标签当中只有a标签带有自定义属性，别的标签名字----dataset纯属扯淡\n            let { categoryname, category1id, category2id, category3id } = node.dataset;\n            //第二个问题解决了：点击的到底是不是a标签（只要这个标签身上带有categoryname）一定是a标签\n            //当前这个if语句：一定是a标签才会进入\n            if (categoryname) {\n                //准备路由跳转的参数对象\n                let loction = { name: \"search\" };\n                let query = { categoryName: categoryname };\n                //一定是a标签：一级目录\n                if (category1id) {\n                    query.category1Id = category1id;\n                    //一定是a标签：二级目录\n                } else if (category2id) {\n                    query.category2Id = category2id;\n                    //一定是a标签：三级目录\n                } else {\n                    query.category3Id = category3id;\n                }\n                //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\n                if (this.$route.params) {\n                    loction.params = this.$route.params;\n                    //动态给location配置对象添加query属性\n                    loction.query = query;\n                    //路由跳转\n                    this.$router.push(loction);\n                }\n            }\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.mask {\n    width: 200px;\n    height: 45px;\n    position: absolute;\n}\n\n.type-nav {\n\n    .container {\n        width: 1200px;\n        margin: 0 auto;\n        display: flex;\n        position: relative;\n\n\n        .sort {\n            position: absolute;\n            left: 0;\n            top: 47px;\n            width: 172px;\n            height: 480px;\n            position: absolute;\n            background: #fafafa;\n            z-index: 999;\n\n            .all-sort-list2 {\n                .item {\n                    h3 {\n                        &:hover {\n                            background: #ccc;\n                        }\n\n                        line-height: 30px;\n                        font-size: 14px;\n                        font-weight: 400;\n                        overflow: hidden;\n                        padding: 0 20px;\n                        margin: 0;\n\n                        a {\n                            cursor: pointer;\n\n                            &:hover {\n                                color: #000;\n                            }\n\n                            color: #333;\n                        }\n                    }\n\n                    .item-list {\n                        display: none;\n                        position: absolute;\n                        width: 734px;\n                        min-height: 478px;\n                        background: #f7f7f7;\n                        left: 172px;\n                        border: 1px solid #ddd;\n                        top: 0;\n                        z-index: 99999 !important;\n\n                        .subitem {\n                            float: left;\n                            width: 650px;\n                            padding: 0 4px 0 8px;\n\n                            dl {\n                                border-top: 1px solid #eee;\n                                padding: 6px 0;\n                                overflow: hidden;\n                                zoom: 1;\n\n                                &.fore {\n                                    border-top: 0;\n                                }\n\n                                dt {\n                                    float: left;\n                                    text-align: center;\n                                    width: 65px;\n                                    font-size: 14px;\n                                    line-height: 22px;\n                                    text-align: right;\n                                    padding: 3px 6px 0 0;\n                                    font-weight: 700;\n\n                                    a {\n                                        cursor: pointer;\n                                        color: rgb(97, 97, 97);\n                                    }\n                                }\n\n                                dd {\n                                    float: left;\n                                    width: 565px;\n                                    padding: 3px 0 0;\n                                    overflow: hidden;\n\n                                    em {\n                                        a {\n                                            cursor: pointer;\n                                            font-size: 12px;\n                                        }\n\n                                        float: left;\n                                        height: 16px;\n                                        line-height: 14px;\n                                        padding: 0 8px;\n                                        margin-top: 5px;\n                                        border-left: 1px solid #ccc;\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    &:hover {\n                        .item-list {\n                            display: block;\n                        }\n                    }\n                }\n            }\n        }\n\n        //过渡动画样式\n        //开始阶段\n        .sort-enter {\n            overflow: hidden;\n            height: 0;\n        }\n\n        //结束阶段（进入）\n        .sort-enter-to {\n            overflow: hidden;\n            height: 461px;\n        }\n\n        //定义动画时间速率\n        .sort-enter-active {\n            overflow: hidden;\n            transition: all 0.5s linear;\n        }\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}