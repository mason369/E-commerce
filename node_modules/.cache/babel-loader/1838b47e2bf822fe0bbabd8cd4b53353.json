{"ast":null,"code":"export default {\n  name: \"Pagination\",\n  props: [\"pageNo\", \"pageSize\", \"total\", \"continues\"],\n  computed: {\n    //总共多少页\n    totalPage() {\n      //向上取\n      return Math.ceil(this.total / this.pageSize);\n    },\n    //计算出连续的页码的起始数字与结束数字[连续页码的数字:至少是5]\n    startNumAndEndNum() {\n      const {\n        continues,\n        pageNo,\n        totalPage\n      } = this;\n      //先定义两个变量存储起始数字与结束数字\n      let start = 0,\n        end = 0;\n      //连续页码数字5【就是至少五页】，如果出现不正常的现象【就是不够五页】\n      //不正常现象【总页数没有连续页码多】\n      if (continues > totalPage) {\n        start = 1;\n        end = totalPage;\n      } else {\n        //正常现象【连续页码5，但是你的总页数一定是大于5的】\n        //起始数字\n        start = pageNo - parseInt(continues / 2);\n        //结束数字\n        end = pageNo + parseInt(continues / 2);\n        //把出现不正常的现象【start数字出现0|负数】纠正\n        if (start < 1) {\n          start = 1;\n          end = continues;\n        }\n        //把出现不正常的现象[end数字大于总页码]纠正\n        if (end > totalPage) {\n          end = totalPage;\n          start = totalPage - continues + 1;\n        }\n      }\n      return {\n        start,\n        end\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AAsCA;EACAA;EACAC;EACAC;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QAAAC;QAAAC;QAAAH;MAAA;MACA;MACA;QACAI;MACA;MACA;MACA;QACAC;QACAD;MACA;QACA;QACA;QACAC;QACA;QACAD;QACA;QACA;UACAC;UACAD;QACA;QACA;QACA;UACAA;UACAC;QACA;MACA;MACA;QAAAA;QAAAD;MAAA;IACA;EACA;AACA","names":["name","props","computed","totalPage","startNumAndEndNum","continues","pageNo","end","start"],"sourceRoot":"src/components/Pagination","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"pagination\">\n        <button :disabled=\"pageNo == 1\" @click=\"$emit('getPageNo', pageNo - 1)\">\n            上一页\n        </button>\n        <button v-if=\"startNumAndEndNum.start > 1\" @click=\"$emit('getPageNo', 1)\" :class=\"{ active: pageNo == 1 }\">\n            1\n        </button>\n        <button v-if=\"startNumAndEndNum.start > 2\">···</button>\n        <!-- 中间部分 -->\n        <button\n            v-for=\"(page, index) in startNumAndEndNum.end\"\n            :key=\"index\"\n            v-show=\"page >= startNumAndEndNum.start\"\n            @click=\"$emit('getPageNo', page)\"\n            :class=\"{ active: pageNo == page }\"\n        >\n            {{ page }}\n        </button>\n\n        <!-- 下 -->\n        <button v-if=\"startNumAndEndNum.end < totalPage - 1\">···</button>\n        <button\n            v-if=\"startNumAndEndNum.end < totalPage\"\n            @click=\"$emit('getPageNo', totalPage)\"\n            :class=\"{ active: pageNo == totalPage }\"\n        >\n            {{ totalPage }}\n        </button>\n        <button :disabled=\"pageNo == totalPage\" @click=\"$emit('getPageNo', pageNo + 1)\">\n            下一页\n        </button>\n\n        <button style=\"margin-left: 30px;\">共 {{ total }} 条</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"Pagination\",\n    props: [\"pageNo\", \"pageSize\", \"total\", \"continues\"],\n    computed: {\n        //总共多少页\n        totalPage() {\n            //向上取\n            return Math.ceil(this.total / this.pageSize);\n        },\n        //计算出连续的页码的起始数字与结束数字[连续页码的数字:至少是5]\n        startNumAndEndNum() {\n            const { continues, pageNo, totalPage } = this;\n            //先定义两个变量存储起始数字与结束数字\n            let start = 0,\n                end = 0;\n            //连续页码数字5【就是至少五页】，如果出现不正常的现象【就是不够五页】\n            //不正常现象【总页数没有连续页码多】\n            if (continues > totalPage) {\n                start = 1;\n                end = totalPage;\n            } else {\n                //正常现象【连续页码5，但是你的总页数一定是大于5的】\n                //起始数字\n                start = pageNo - parseInt(continues / 2);\n                //结束数字\n                end = pageNo + parseInt(continues / 2);\n                //把出现不正常的现象【start数字出现0|负数】纠正\n                if (start < 1) {\n                    start = 1;\n                    end = continues;\n                }\n                //把出现不正常的现象[end数字大于总页码]纠正\n                if (end > totalPage) {\n                    end = totalPage;\n                    start = totalPage - continues + 1;\n                }\n            }\n            return { start, end };\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination {\n    text-align: center;\n\n    button {\n        margin: 0 5px;\n        background-color: #eaeaea;\n        color: #606266;\n        outline: none;\n        border-radius: 2px;\n        padding: 0 4px;\n        vertical-align: top;\n        display: inline-block;\n        font-size: 13px;\n        min-width: 35.5px;\n        height: 28px;\n        line-height: 28px;\n        cursor: pointer;\n        box-sizing: border-box;\n        text-align: center;\n        border: 0;\n\n        &[disabled] {\n            color: #c0c4cc;\n            cursor: not-allowed;\n        }\n\n        &.active {\n            cursor: not-allowed;\n            background-color: #8dc742;\n            color: #fff;\n        }\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}