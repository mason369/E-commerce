{"ast":null,"code":"import { reqGetCode, reqLogOut, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\nimport { getToken, removeToken, setTokens } from \"@/utils/token\";\nconst actions = {\n  //获取验证码\n  async getCode({\n    commit\n  }, email) {\n    let result = await reqGetCode(email);\n    if (result.code === 200) {\n      commit(\"GETCODE\", result.data);\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //注册业务\n  //用户注册\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //获取用户信息\n  async getUserInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n    if (result.code == 200) {\n      commit(\"GETUSERINFO\", result.data);\n    }\n  },\n  //登录业务\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data);\n    // 服务器下发token，用户唯一标识符(uuid)\n    if (result.code == 200) {\n      commit(\"USERLOGIN\", result.data.token);\n      //持久化存储token\n      setTokens(result.data.token);\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //退出登录\n  async userLogOut({\n    commit\n  }) {\n    let result = await reqLogOut();\n    //action里面不能操作state,提交mutation修改state\n    if (result.code == 200) {\n      commit(\"CLEAR\");\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  }\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEAR(state) {\n    //先仓库中先类用户信息清空\n    state.token = \"\", state.userInfo = {};\n    removeToken();\n  }\n};\nconst state = {\n  code: \"\",\n  token: getToken(),\n  userInfo: {}\n};\nconst getters = {};\nexport default {\n  actions,\n  mutations,\n  state,\n  getters\n};","map":{"version":3,"names":["reqGetCode","reqLogOut","reqUserInfo","reqUserLogin","reqUserRegister","getToken","removeToken","setTokens","actions","getCode","commit","email","result","code","data","Promise","reject","Error","userRegister","user","getUserInfo","userLogin","token","userLogOut","mutations","GETCODE","state","USERLOGIN","GETUSERINFO","userInfo","CLEAR","getters"],"sources":["D:/E-commerce/src/store/user/index.js"],"sourcesContent":["import { reqGetCode, reqLogOut, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\nimport { getToken, removeToken, setTokens } from \"@/utils/token\";\n\nconst actions = {\n    //获取验证码\n    async getCode({ commit }, email) {\n        let result = await reqGetCode(email);\n        if (result.code === 200) {\n            commit(\"GETCODE\", result.data);\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"faile\"));\n        }\n    },\n    //注册业务\n    //用户注册\n    async userRegister({ commit }, user) {\n        let result = await reqUserRegister(user);\n        if (result.code == 200) {\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"faile\"));\n        }\n    },\n    //获取用户信息\n    async getUserInfo({ commit }) {\n        let result = await reqUserInfo();\n        if (result.code == 200) {\n            commit(\"GETUSERINFO\", result.data);\n        }\n    },\n\n    //登录业务\n    async userLogin({ commit }, data) {\n        let result = await reqUserLogin(data);\n        // 服务器下发token，用户唯一标识符(uuid)\n        if (result.code == 200) {\n            commit(\"USERLOGIN\", result.data.token);\n            //持久化存储token\n            setTokens(result.data.token);\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"faile\"));\n        }\n    },\n    //退出登录\n    async userLogOut({ commit }) {\n        let result = await reqLogOut();\n        //action里面不能操作state,提交mutation修改state\n        if (result.code == 200) {\n            commit(\"CLEAR\");\n            return'ok'\n        }else {\n            return Promise.reject(new Error('faile'))\n        }\n    },\n};\nconst mutations = {\n    GETCODE(state, code) {\n        state.code = code;\n    },\n    USERLOGIN(state, token) {\n        state.token = token;\n    },\n    GETUSERINFO(state, userInfo) {\n        state.userInfo = userInfo;\n    },\n    CLEAR(state) {\n        //先仓库中先类用户信息清空\n        (state.token = \"\"), (state.userInfo = {});\n        removeToken();\n    },\n};\nconst state = {\n    code: \"\",\n    token: getToken(),\n    userInfo: {},\n};\nconst getters = {};\nexport default {\n    actions,\n    mutations,\n    state,\n    getters,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}