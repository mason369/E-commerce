{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckdById } from \"@/api\";\nconst actions = {\n  //获取购物车列表数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n    if (result.code == 200) {\n      commit(\"GETCARTLIST\", result.data);\n    }\n  },\n  //删除购物车商品\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeleteCartById(skuId);\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"failed\"));\n    }\n  },\n  //修改购物车商品选中状态\n  async updateCheckedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckdById(skuId, isChecked);\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"failed\"));\n    }\n  },\n  //删除全部选中的商品\n  deleteAllCheckedCart({\n    dispatch,\n    getters\n  }) {\n    //context:小仓库，comm北【提交mutations修改state】 getters【计算属性】dispatch【派发action】 state【当前仓库数据】\n    // 获取购物车中全部的产品（是一个数组)\n    let PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(item => {\n      let promise = item.isChecked == 1 ? dispatch(\"deleteCartListBySkuId\", item.skuId) : \"\";\n      //将每一次返回的Promise添加到数组当中\n      PromiseAll.push(promise);\n    });\n    //只要全部的pi|p2....都成功，返回结果即为成功\n    // 如果有一个失败,返回即为失败结果\n    return Promise.all(PromiseAll);\n  },\n  //修改全部商品的选中状态\n  updateAllCartIsChecked({\n    dispatch,\n    state\n  }, isChecked) {\n    let promiseAll = [];\n    state.cartList[0].cartInfoList.forEach(item => {\n      let promise = dispatch(\"updateCheckedById\", {\n        skuId: item.skuId,\n        isChecked\n      });\n      promiseAll.push(promise);\n    });\n    //最终返回结果\n    return Promise.all(promiseAll);\n  }\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\nconst state = {\n  cartList: []\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  actions,\n  mutations,\n  state,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeleteCartById","reqUpdateCheckdById","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skuId","Promise","reject","Error","updateCheckedById","isChecked","deleteAllCheckedCart","dispatch","getters","PromiseAll","cartList","cartInfoList","forEach","item","promise","push","all","updateAllCartIsChecked","state","promiseAll","mutations","GETCARTLIST"],"sources":["D:/E-commerce/src/store/shopcart/index.js"],"sourcesContent":["import { reqCartList, reqDeleteCartById, reqUpdateCheckdById } from \"@/api\";\n\nconst actions = {\n    //获取购物车列表数据\n    async getCartList({ commit }) {\n        let result = await reqCartList();\n        if (result.code == 200) {\n            commit(\"GETCARTLIST\", result.data);\n        }\n    },\n    //删除购物车商品\n    async deleteCartListBySkuId({ commit }, skuId) {\n        let result = await reqDeleteCartById(skuId);\n        if (result.code == 200) {\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"failed\"));\n        }\n    },\n    //修改购物车商品选中状态\n    async updateCheckedById({ commit }, { skuId, isChecked }) {\n        let result = await reqUpdateCheckdById(skuId, isChecked);\n        if (result.code == 200) {\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"failed\"));\n        }\n    },\n    //删除全部选中的商品\n    deleteAllCheckedCart({ dispatch, getters }) {\n        //context:小仓库，comm北【提交mutations修改state】 getters【计算属性】dispatch【派发action】 state【当前仓库数据】\n        // 获取购物车中全部的产品（是一个数组)\n        let PromiseAll = [];\n        getters.cartList.cartInfoList.forEach((item) => {\n            let promise = item.isChecked == 1 ? dispatch(\"deleteCartListBySkuId\", item.skuId) : \"\";\n            //将每一次返回的Promise添加到数组当中\n            PromiseAll.push(promise);\n        });\n        //只要全部的pi|p2....都成功，返回结果即为成功\n        // 如果有一个失败,返回即为失败结果\n        return Promise.all(PromiseAll);\n    },\n    //修改全部商品的选中状态\n    updateAllCartIsChecked({ dispatch, state }, isChecked) {\n        let promiseAll = [];\n        state.cartList[0].cartInfoList.forEach((item) => {\n            let promise = dispatch(\"updateCheckedById\", { skuId: item.skuId, isChecked });\n            promiseAll.push(promise);\n        });\n        //最终返回结果\nreturn Promise.all(promiseAll);\n    },\n};\nconst mutations = {\n    GETCARTLIST(state, cartList) {\n        state.cartList = cartList;\n    },\n};\nconst state = {\n    cartList: [],\n};\nconst getters = {\n    cartList(state) {\n        return state.cartList[0] || {};\n    },\n};\n\nexport default {\n    actions,\n    mutations,\n    state,\n    getters,\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,OAAO;AAE3E,MAAMC,OAAO,GAAG;EACZ;EACA,MAAMC,WAAW,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC1B,IAAIC,MAAM,GAAG,MAAMN,WAAW,EAAE;IAChC,IAAIM,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,aAAa,EAAEC,MAAM,CAACE,IAAI,CAAC;IACtC;EACJ,CAAC;EACD;EACA,MAAMC,qBAAqB,CAAC;IAAEJ;EAAO,CAAC,EAAEK,KAAK,EAAE;IAC3C,IAAIJ,MAAM,GAAG,MAAML,iBAAiB,CAACS,KAAK,CAAC;IAC3C,IAAIJ,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpB,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9C;EACJ,CAAC;EACD;EACA,MAAMC,iBAAiB,CAAC;IAAET;EAAO,CAAC,EAAE;IAAEK,KAAK;IAAEK;EAAU,CAAC,EAAE;IACtD,IAAIT,MAAM,GAAG,MAAMJ,mBAAmB,CAACQ,KAAK,EAAEK,SAAS,CAAC;IACxD,IAAIT,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpB,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9C;EACJ,CAAC;EACD;EACAG,oBAAoB,CAAC;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,EAAE;IACxC;IACA;IACA,IAAIC,UAAU,GAAG,EAAE;IACnBD,OAAO,CAACE,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC5C,IAAIC,OAAO,GAAGD,IAAI,CAACR,SAAS,IAAI,CAAC,GAAGE,QAAQ,CAAC,uBAAuB,EAAEM,IAAI,CAACb,KAAK,CAAC,GAAG,EAAE;MACtF;MACAS,UAAU,CAACM,IAAI,CAACD,OAAO,CAAC;IAC5B,CAAC,CAAC;IACF;IACA;IACA,OAAOb,OAAO,CAACe,GAAG,CAACP,UAAU,CAAC;EAClC,CAAC;EACD;EACAQ,sBAAsB,CAAC;IAAEV,QAAQ;IAAEW;EAAM,CAAC,EAAEb,SAAS,EAAE;IACnD,IAAIc,UAAU,GAAG,EAAE;IACnBD,KAAK,CAACR,QAAQ,CAAC,CAAC,CAAC,CAACC,YAAY,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC7C,IAAIC,OAAO,GAAGP,QAAQ,CAAC,mBAAmB,EAAE;QAAEP,KAAK,EAAEa,IAAI,CAACb,KAAK;QAAEK;MAAU,CAAC,CAAC;MAC7Ec,UAAU,CAACJ,IAAI,CAACD,OAAO,CAAC;IAC5B,CAAC,CAAC;IACF;IACR,OAAOb,OAAO,CAACe,GAAG,CAACG,UAAU,CAAC;EAC1B;AACJ,CAAC;AACD,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAK,EAAER,QAAQ,EAAE;IACzBQ,KAAK,CAACR,QAAQ,GAAGA,QAAQ;EAC7B;AACJ,CAAC;AACD,MAAMQ,KAAK,GAAG;EACVR,QAAQ,EAAE;AACd,CAAC;AACD,MAAMF,OAAO,GAAG;EACZE,QAAQ,CAACQ,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACR,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EAClC;AACJ,CAAC;AAED,eAAe;EACXjB,OAAO;EACP2B,SAAS;EACTF,KAAK;EACLV;AACJ,CAAC"},"metadata":{},"sourceType":"module"}