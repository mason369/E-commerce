{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"ShopCart\",\n  mounted() {\n    this.getData();\n  },\n  //获取个人购物车数据\n  methods: {\n    getData() {\n      this.$store.dispatch(\"getCartList\");\n    },\n    //修改购物车商品个数(节流)\n    handler: throttle(async function (type, disNum, cart) {\n      //type:为了区分这三个元素\n      //disNum形参:+变化量（1) -变化量（-1)input最终的个数（并不是变化量)\n      //cart:哪一个产品【身 上有id】\n      switch (type) {\n        case \"add\":\n          //带给服务器的变量\n          disNum = 1;\n          break;\n        case \"minus\":\n          // 判断产品的个数大于1，才可以传递给服务器-1\n          disNum = cart.skuNum > 1 ? -1 : 0;\n          break;\n        case \"change\":\n          //用户输入进来的最终量，非法的（带有汉字),带给服务器数字\n          // if (isNaN(disNum) || disNum < 1) {\n          //     disNum = 1;\n          // } else {\n          //   //属于正常情况（小数:取正），带给服务器变化的量用户输入进来的–产品的起始个数\n          //   disNum = parseInt(disNum) - cart.skuNum;\n          // }\n          disNum = isNaN(disNum) || disNum < 1 ? 1 : parseInt(disNum) - cart.skuNum;\n          break;\n      }\n      //派发action\n      try {\n        await this.$store.dispatch(\"addOrUpdateShopCart\", {\n          skuId: cart.skuId,\n          skuNum: disNum\n        });\n        //再一次获取服务器最新的数据进行展示\n        this.getData();\n      } catch (error) {\n        return error;\n      }\n    }, 1000),\n    //删除购物车商品操作\n    async deleteCartById(cart) {\n      try {\n        //如果删除成功再次发请求获取新的数据进行展示\n        await this.$store.dispatch(\"deleteCartListBySkuId\", cart.skuId);\n        this.getData();\n      } catch (error) {\n        console.log(\"删除商品失败!\");\n      }\n    },\n    //修改购物车商品选中状态\n    async updateChecked(cart, event) {\n      try {\n        //如果修改数据成功，再次获取服务器数据（购物车）\n        //带给服务器的参数isChecked，不是布尔值，应该是0|1\n        let isChecked = event.target.checked ? \"1\" : \"0\";\n        await this.$store.dispatch(\"updateCheckedById\", {\n          skuId: cart.skuId,\n          isChecked\n        });\n        this.getData();\n      } catch (error) {\n        //如果失败提示\n        alert(error.message);\n      }\n    },\n    //删除全部选中的商品\n    async deleteAllCheckCart() {\n      try {\n        //派发action\n        await this.$store.dispatch(\"deleteAllCheckedCart\");\n        this.getData();\n        //再发请求获取购物车列表\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n    //修改全部产品的选中状态\n    async updateAllCartChecked() {\n      try {\n        let isChecked = event.target.checked ? \"1\" : 0;\n        //派发action\n        await this.$store.dispatch(\"updateAllCartIsChecked\", isChecked);\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"cartList\"]),\n    //购物车数据\n    cartInfoList() {\n      return this.cartList.cartInfoList || [];\n    },\n    //计算总价\n    totalPrice() {\n      let sum = 0;\n      this.cartInfoList.forEach(item => {\n        //选中的才计算总价\n        item.isChecked == 1 ? sum += item.skuNum * item.skuPrice : \"\";\n      });\n      //返回总价\n      return sum;\n    },\n    //计算全选\n    isAllCheck() {\n      //判断底部复选框是否勾选【全部产品都选中,才勾选】\n      return this.cartInfoList.every(item => item.isChecked == 1);\n    },\n    cartCheckedNum() {\n      let PromiseAll = 0;\n      this.cartInfoList.forEach(cartInfoList => {\n        let promise = cartInfoList.isChecked == 1 ? 1 : 0;\n        //将每一次返回的Promise添加到数组当中\n        PromiseAll += promise;\n      });\n      //将相加的总和返回\n      return PromiseAll;\n    }\n  }\n};","map":{"version":3,"mappings":"AAsFA;AACA;AAEA;EACAA;EACAC;IACA;EACA;EACA;EACAC;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;UACA;UACAC;UACA;QACA;UACA;UACAA;UACA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACAA;UACA;MAAA;MAEA;MACA;QACA;UAAAC;UAAAC;QAAA;QACA;QACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;QACA;QACA;QACA;MACA;QACAC;MACA;IACA;IACA;IACA;MACA;QACA;QACA;QACA;QACA;UACAF;UACAG;QACA;QACA;MACA;QACA;QACAC;MACA;IACA;IACA;IACA;MACA;QACA;QACA;QACA;QACA;MACA;QACAA;MACA;IACA;IACA;IACA;MACA;QACA;QACA;QACA;QACA;MACA;QACAA;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;QACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;QACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","mounted","methods","getData","handler","disNum","skuId","skuNum","console","isChecked","alert","computed","cartInfoList","totalPrice","item","isAllCheck","cartCheckedNum","PromiseAll"],"sourceRoot":"src/pages/ShopCart","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"cart\">\n        <h4>全部商品</h4>\n        <div class=\"cart-main\">\n            <div class=\"cart-th\">\n                <div class=\"cart-th1\">全部</div>\n                <div class=\"cart-th2\">商品</div>\n                <div class=\"cart-th3\">单价（元）</div>\n                <div class=\"cart-th4\">数量</div>\n                <div class=\"cart-th5\">小计（元）</div>\n                <div class=\"cart-th6\">操作</div>\n            </div>\n            <div class=\"cart-body\">\n                <ul class=\"cart-list\" v-for=\"cart in cartInfoList\" :key=\"cart.id\">\n                    <li class=\"cart-list-con1\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"chk_list\"\n                            :checked=\"cart.isChecked == 1\"\n                            @change=\"updateChecked(cart, $event)\"\n                        />\n                    </li>\n                    <li class=\"cart-list-con2\">\n                        <img :src=\"cart.imgUrl\" />\n                        <div class=\"item-msg\">{{ cart.skuName }}</div>\n                    </li>\n                    <li class=\"cart-list-con4\">\n                        <span class=\"price\">{{ cart.skuPrice }}.00</span>\n                    </li>\n                    <li class=\"cart-list-con5\">\n                        <a href=\"javascript:void(0)\" class=\"mins\" @click=\"handler('minus', -1, cart)\">-</a>\n                        <input\n                            autocomplete=\"off\"\n                            type=\"text\"\n                            minnum=\"1\"\n                            class=\"itxt\"\n                            :value=\"cart.skuNum\"\n                            @change=\"handler('change', $event.target.value * 1, cart)\"\n                        />\n                        <a href=\"javascript:void(0)\" class=\"plus\" @click=\"handler('add', 1, cart)\">+</a>\n                    </li>\n                    <li class=\"cart-list-con6\">\n                        <span class=\"sum\">{{ cart.skuNum * cart.skuPrice }}</span>\n                    </li>\n                    <li class=\"cart-list-con7\">\n                        <a class=\"sindelet\" @click=\"deleteCartById(cart)\">删除</a>\n                        <br />\n                        <a href=\"#none\">移到收藏</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"cart-tool\">\n            <div class=\"select-all\">\n                <input\n                    class=\"chooseAll\"\n                    type=\"checkbox\"\n                    :checked=\"isAllCheck && cartInfoList.length > 0\"\n                    @change=\"updateAllCartChecked\"\n                    :disabled=\"cartInfoList.length == 0\"\n                />\n                <span>全选</span>\n            </div>\n            <div class=\"option\">\n                <a @click=\"deleteAllCheckCart\">删除选中的商品</a>\n                <a href=\"#none\">移到我的关注</a>\n                <a href=\"#none\">清除下柜商品</a>\n            </div>\n            <div class=\"money-box\">\n                <div class=\"chosed\">\n                    已选择 <span>{{ cartCheckedNum }}</span\n                    >件商品\n                </div>\n                <div class=\"sumprice\">\n                    <em>总价（不含运费） ：</em>\n                    <i class=\"summoney\">{{ totalPrice }}</i>\n                </div>\n                <div class=\"sumbtn\">\n                    <a class=\"sum-btn\" @click=\"$router.push('/trade')\">结算</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport throttle from \"lodash/throttle\";\n\nexport default {\n    name: \"ShopCart\",\n    mounted() {\n        this.getData();\n    },\n    //获取个人购物车数据\n    methods: {\n        getData() {\n            this.$store.dispatch(\"getCartList\");\n        },\n        //修改购物车商品个数(节流)\n        handler: throttle(async function (type, disNum, cart) {\n            //type:为了区分这三个元素\n            //disNum形参:+变化量（1) -变化量（-1)input最终的个数（并不是变化量)\n            //cart:哪一个产品【身 上有id】\n            switch (type) {\n                case \"add\":\n                    //带给服务器的变量\n                    disNum = 1;\n                    break;\n                case \"minus\":\n                    // 判断产品的个数大于1，才可以传递给服务器-1\n                    disNum = cart.skuNum > 1 ? -1 : 0;\n                    break;\n                case \"change\":\n                    //用户输入进来的最终量，非法的（带有汉字),带给服务器数字\n                    // if (isNaN(disNum) || disNum < 1) {\n                    //     disNum = 1;\n                    // } else {\n                    //   //属于正常情况（小数:取正），带给服务器变化的量用户输入进来的–产品的起始个数\n                    //   disNum = parseInt(disNum) - cart.skuNum;\n                    // }\n                    disNum = isNaN(disNum) || disNum < 1 ? 1 : parseInt(disNum) - cart.skuNum;\n                    break;\n            }\n            //派发action\n            try {\n                await this.$store.dispatch(\"addOrUpdateShopCart\", { skuId: cart.skuId, skuNum: disNum });\n                //再一次获取服务器最新的数据进行展示\n                this.getData();\n            } catch (error) {\n                return error;\n            }\n        }, 1000),\n        //删除购物车商品操作\n        async deleteCartById(cart) {\n            try {\n                //如果删除成功再次发请求获取新的数据进行展示\n                await this.$store.dispatch(\"deleteCartListBySkuId\", cart.skuId);\n                this.getData();\n            } catch (error) {\n                console.log(\"删除商品失败!\");\n            }\n        },\n        //修改购物车商品选中状态\n        async updateChecked(cart, event) {\n            try {\n                //如果修改数据成功，再次获取服务器数据（购物车）\n                //带给服务器的参数isChecked，不是布尔值，应该是0|1\n                let isChecked = event.target.checked ? \"1\" : \"0\";\n                await this.$store.dispatch(\"updateCheckedById\", {\n                    skuId: cart.skuId,\n                    isChecked,\n                });\n                this.getData();\n            } catch (error) {\n                //如果失败提示\n                alert(error.message);\n            }\n        },\n        //删除全部选中的商品\n        async deleteAllCheckCart() {\n            try {\n                //派发action\n                await this.$store.dispatch(\"deleteAllCheckedCart\");\n                this.getData();\n                //再发请求获取购物车列表\n            } catch (error) {\n                alert(error.message);\n            }\n        },\n        //修改全部产品的选中状态\n        async updateAllCartChecked() {\n            try {\n                let isChecked = event.target.checked ? \"1\" : 0;\n                //派发action\n                await this.$store.dispatch(\"updateAllCartIsChecked\", isChecked);\n                this.getData();\n            } catch (error) {\n                alert(error.message);\n            }\n        },\n    },\n    computed: {\n        ...mapGetters([\"cartList\"]),\n        //购物车数据\n        cartInfoList() {\n            return this.cartList.cartInfoList || [];\n        },\n        //计算总价\n        totalPrice() {\n            let sum = 0;\n            this.cartInfoList.forEach((item) => {\n              //选中的才计算总价\n                item.isChecked == 1 ? (sum += item.skuNum * item.skuPrice) : \"\";\n            });\n            //返回总价\n            return sum;\n        },\n        //计算全选\n        isAllCheck() {\n            //判断底部复选框是否勾选【全部产品都选中,才勾选】\n            return this.cartInfoList.every((item) => item.isChecked == 1);\n        },\n        cartCheckedNum() {\n            let PromiseAll = 0;\n            this.cartInfoList.forEach((cartInfoList) => {\n                let promise = cartInfoList.isChecked == 1 ? 1 : 0;\n                //将每一次返回的Promise添加到数组当中\n                PromiseAll += promise;\n            });\n            //将相加的总和返回\n            return PromiseAll;\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sum-btn{\n  cursor: pointer\n}\n.cart {\n    width: 1200px;\n    margin: 0 auto;\n\n    h4 {\n        margin: 9px 0;\n        font-size: 14px;\n        line-height: 21px;\n    }\n\n    .cart-main {\n        .cart-th {\n            background: #f5f5f5;\n            border: 1px solid #ddd;\n            padding: 10px;\n            overflow: hidden;\n\n            & > div {\n                float: left;\n            }\n\n            .cart-th1 {\n                width: 25%;\n\n                input {\n                    vertical-align: middle;\n                }\n\n                span {\n                    vertical-align: middle;\n                }\n            }\n\n            .cart-th2 {\n                width: 25%;\n            }\n\n            .cart-th3,\n            .cart-th4,\n            .cart-th5,\n            .cart-th6 {\n                width: 12.5%;\n            }\n        }\n\n        .cart-body {\n            margin: 15px 0;\n            border: 1px solid #ddd;\n\n            .cart-list {\n                padding: 10px;\n                border-bottom: 1px solid #ddd;\n                overflow: hidden;\n\n                & > li {\n                    float: left;\n                }\n\n                .cart-list-con1 {\n                    width: 15%;\n                }\n\n                .cart-list-con2 {\n                    width: 35%;\n\n                    img {\n                        width: 82px;\n                        height: 82px;\n                        float: left;\n                    }\n\n                    .item-msg {\n                        float: left;\n                        width: 150px;\n                        margin: 0 10px;\n                        line-height: 18px;\n                    }\n                }\n\n                .cart-list-con4 {\n                    width: 10%;\n                }\n\n                .cart-list-con5 {\n                    width: 17%;\n\n                    .mins {\n                        border: 1px solid #ddd;\n                        border-right: 0;\n                        float: left;\n                        color: #666;\n                        width: 6px;\n                        text-align: center;\n                        padding: 8px;\n                    }\n\n                    input {\n                        border: 1px solid #ddd;\n                        width: 40px;\n                        height: 33px;\n                        float: left;\n                        text-align: center;\n                        font-size: 14px;\n                    }\n\n                    .plus {\n                        border: 1px solid #ddd;\n                        border-left: 0;\n                        float: left;\n                        color: #666;\n                        width: 6px;\n                        text-align: center;\n                        padding: 8px;\n                    }\n                }\n\n                .cart-list-con6 {\n                    width: 10%;\n\n                    .sum {\n                        font-size: 16px;\n                    }\n                }\n\n                .cart-list-con7 {\n                    width: 13%;\n\n                    a {\n                        color: #666;\n                    }\n                }\n            }\n        }\n    }\n\n    .cart-tool {\n        overflow: hidden;\n        border: 1px solid #ddd;\n\n        .select-all {\n            padding: 10px;\n            overflow: hidden;\n            float: left;\n\n            span {\n                vertical-align: middle;\n            }\n\n            input {\n                vertical-align: middle;\n            }\n        }\n\n        .option {\n            padding: 10px;\n            overflow: hidden;\n            float: left;\n\n            a {\n                float: left;\n                padding: 0 10px;\n                color: #666;\n            }\n        }\n\n        .money-box {\n            float: right;\n\n            .chosed {\n                line-height: 26px;\n                float: left;\n                padding: 0 10px;\n            }\n\n            .sumprice {\n                width: 200px;\n                line-height: 22px;\n                float: left;\n                padding: 0 10px;\n\n                .summoney {\n                    color: #c81623;\n                    font-size: 16px;\n                }\n            }\n\n            .sumbtn {\n                float: right;\n\n                a {\n                    display: block;\n                    position: relative;\n                    width: 96px;\n                    height: 52px;\n                    line-height: 52px;\n                    color: #fff;\n                    text-align: center;\n                    font-size: 18px;\n                    font-family: \"Microsoft YaHei\";\n                    background: #e1251b;\n                    overflow: hidden;\n                }\n            }\n        }\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}