{"ast":null,"code":"//对axios进行二次封装\nimport axios from \"axios\";\n//引入进度条插件\nimport nprogress from \"nprogress\";\n//引入进度条样式\nimport \"/node_modules/nprogress/nprogress.css\";\n//在当前模块中引store\nimport store from \"@/store\";\n// const requests = axios.request({\n//     //配置对象\n//     baseUrl: \"/api\",\n//     timeout: 5000,\n// });\n//使用create方法创建axios实例\nexport const requests = axios.create({\n  timeout: 7000,\n  // 请求超时时间\n  baseURL: \"/api\",\n  headers: {\n    \"Content-Type\": \"application/json;charset=UTF-8\"\n  }\n});\n\n//请求拦截器\nrequests.interceptors.request.use(config => {\n  if (store.state.detail.uuid_token) {\n    //请求头添加一个字段:和后端商量\n    config.headers.userTempId = store.state.detail.uuid_token;\n  }\n  //进度条开始\n  nprogress.start();\n  return config;\n});\n\n//响应拦截器\nrequests.interceptors.response.use(res => {\n  //成功的回调函数\n  //进度条结束\n  nprogress.done();\n  return res.data;\n}, Error => {\n  //失败的回调函数\n  return Promise.reject(new Error(\"faile\"));\n});\nexport default requests;","map":{"version":3,"names":["axios","nprogress","store","requests","create","timeout","baseURL","headers","interceptors","request","use","config","state","detail","uuid_token","userTempId","start","response","res","done","data","Error","Promise","reject"],"sources":["D:/E-commerce/src/api/request.js"],"sourcesContent":["//对axios进行二次封装\r\nimport axios from \"axios\";\r\n//引入进度条插件\r\nimport nprogress from \"nprogress\";\r\n//引入进度条样式\r\nimport \"/node_modules/nprogress/nprogress.css\";\r\n//在当前模块中引store\r\nimport store from \"@/store\";\r\n// const requests = axios.request({\r\n//     //配置对象\r\n//     baseUrl: \"/api\",\r\n//     timeout: 5000,\r\n// });\r\n//使用create方法创建axios实例\r\nexport const requests = axios.create({\r\n    timeout: 7000, // 请求超时时间\r\n    baseURL: \"/api\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n    },\r\n});\r\n\r\n//请求拦截器\r\nrequests.interceptors.request.use((config) => {\r\n    if (store.state.detail.uuid_token) {\r\n        //请求头添加一个字段:和后端商量\r\n        config.headers.userTempId = store.state.detail.uuid_token\r\n    }\r\n    //进度条开始\r\n    nprogress.start();\r\n    return config;\r\n});\r\n\r\n//响应拦截器\r\nrequests.interceptors.response.use(\r\n    (res) => {\r\n        //成功的回调函数\r\n        //进度条结束\r\n        nprogress.done();\r\n        return res.data;\r\n    },\r\n    (Error) => {\r\n        //失败的回调函数\r\n        return Promise.reject(new Error(\"faile\"));\r\n    },\r\n);\r\n\r\nexport default requests;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,SAAS,MAAM,WAAW;AACjC;AACA,OAAO,uCAAuC;AAC9C;AACA,OAAOC,KAAK,MAAM,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAE,IAAI;EAAE;EACfC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAJ,QAAQ,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC1C,IAAIT,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,UAAU,EAAE;IAC/B;IACAH,MAAM,CAACJ,OAAO,CAACQ,UAAU,GAAGb,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,UAAU;EAC7D;EACA;EACAb,SAAS,CAACe,KAAK,EAAE;EACjB,OAAOL,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAR,QAAQ,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7BQ,GAAG,IAAK;EACL;EACA;EACAjB,SAAS,CAACkB,IAAI,EAAE;EAChB,OAAOD,GAAG,CAACE,IAAI;AACnB,CAAC,EACAC,KAAK,IAAK;EACP;EACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIF,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7C,CAAC,CACJ;AAED,eAAelB,QAAQ"},"metadata":{},"sourceType":"module"}