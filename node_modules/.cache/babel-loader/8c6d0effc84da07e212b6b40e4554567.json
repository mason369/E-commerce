{"ast":null,"code":"//home模块仓库\n/* eslint-disable */\nimport { reqCategoryList, reqGetBannerList, reqGetFloorBannerList, reqGetGoodsHot } from \"@/api\";\n\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n  //收到上下文对象(包含commit)和dispatch过来的值\n  // 获取服务器数据\n  async categoryList({\n    commit\n  }) {\n    let result = await reqCategoryList();\n    if (result.code == 200) {\n      commit(\"CATEGORYLIST\", result.data);\n    }\n  },\n  //获取首页轮播图的数据\n  async getBannerList({\n    commit\n  }) {\n    let result = await reqGetBannerList();\n    if (result.code == 200) {\n      commit(\"GETBANNERLIST\", result.data);\n    }\n  },\n  //获取首页floor轮播图\n  async getFloorBannerList({\n    commit\n  }) {\n    let result = await reqGetFloorBannerList();\n    if (result.code == 200) {\n      commit(\"GETFLOORBANLIST\", result.data);\n    }\n  },\n  //获取热门商品列表\n  async getGoodsHot({\n    commit\n  }) {\n    let result = await reqGetGoodsHot();\n    console.log(result);\n    if (result.code == 200) {\n      commit(\"GETGOODSHOT\", result.data);\n    }\n  }\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {\n  CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORBANLIST(state, floorBannerList) {\n    state.floorBannerList = floorBannerList;\n  },\n  GETGOODSHOT(state, goodsHot) {\n    state.goodsHot = goodsHot;\n  }\n};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {\n  //三级联动列表数据\n  categoryList: [],\n  //轮播图数据\n  bannerList: [],\n  //floor组件轮播图数据\n  floorBannerList: [],\n  goodsHot: []\n};\n\n/* eslint-disable */\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {};\n\n// //创建并暴露store\nexport default {\n  actions,\n  mutations,\n  state,\n  getters\n};","map":{"version":3,"names":["reqCategoryList","reqGetBannerList","reqGetFloorBannerList","reqGetGoodsHot","actions","categoryList","commit","result","code","data","getBannerList","getFloorBannerList","getGoodsHot","console","log","mutations","CATEGORYLIST","state","GETBANNERLIST","bannerList","GETFLOORBANLIST","floorBannerList","GETGOODSHOT","goodsHot","getters"],"sources":["D:/E-commerce/src/store/home/index.js"],"sourcesContent":["//home模块仓库\n/* eslint-disable */\nimport { reqCategoryList, reqGetBannerList, reqGetFloorBannerList, reqGetGoodsHot } from \"@/api\";\n\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n    //收到上下文对象(包含commit)和dispatch过来的值\n    // 获取服务器数据\n    async categoryList({ commit }) {\n        let result = await reqCategoryList();\n        if (result.code == 200) {\n            commit(\"CATEGORYLIST\", result.data);\n        }\n    },\n    //获取首页轮播图的数据\n    async getBannerList({ commit }) {\n        let result = await reqGetBannerList();\n        if (result.code == 200) {\n            commit(\"GETBANNERLIST\", result.data);\n        }\n    },\n    //获取首页floor轮播图\n    async getFloorBannerList({ commit }) {\n        let result = await reqGetFloorBannerList();\n        if (result.code == 200) {\n            commit(\"GETFLOORBANLIST\", result.data);\n        }\n    },\n    //获取热门商品列表\n    async getGoodsHot({ commit }) {\n        let result = await reqGetGoodsHot();\n        console.log(result);\n        if (result.code == 200) {\n            commit(\"GETGOODSHOT\", result.data);\n        }\n    },\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {\n    CATEGORYLIST(state, categoryList) {\n        state.categoryList = categoryList;\n    },\n    GETBANNERLIST(state, bannerList) {\n        state.bannerList = bannerList;\n    },\n    GETFLOORBANLIST(state, floorBannerList) {\n        state.floorBannerList = floorBannerList;\n    },\n\n    GETGOODSHOT(state, goodsHot) {\n        state.goodsHot = goodsHot;\n    },\n};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {\n    //三级联动列表数据\n    categoryList: [],\n    //轮播图数据\n    bannerList: [],\n    //floor组件轮播图数据\n    floorBannerList: [],\n    goodsHot: [],\n};\n\n/* eslint-disable */\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {};\n\n// //创建并暴露store\nexport default {\n    actions,\n    mutations,\n    state,\n    getters,\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,eAAe,EAAEC,gBAAgB,EAAEC,qBAAqB,EAAEC,cAAc,QAAQ,OAAO;;AAEhG;AACA,MAAMC,OAAO,GAAG;EACZ;EACA;EACA,MAAMC,YAAY,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC3B,IAAIC,MAAM,GAAG,MAAMP,eAAe,EAAE;IACpC,IAAIO,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,cAAc,EAAEC,MAAM,CAACE,IAAI,CAAC;IACvC;EACJ,CAAC;EACD;EACA,MAAMC,aAAa,CAAC;IAAEJ;EAAO,CAAC,EAAE;IAC5B,IAAIC,MAAM,GAAG,MAAMN,gBAAgB,EAAE;IACrC,IAAIM,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,eAAe,EAAEC,MAAM,CAACE,IAAI,CAAC;IACxC;EACJ,CAAC;EACD;EACA,MAAME,kBAAkB,CAAC;IAAEL;EAAO,CAAC,EAAE;IACjC,IAAIC,MAAM,GAAG,MAAML,qBAAqB,EAAE;IAC1C,IAAIK,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,iBAAiB,EAAEC,MAAM,CAACE,IAAI,CAAC;IAC1C;EACJ,CAAC;EACD;EACA,MAAMG,WAAW,CAAC;IAAEN;EAAO,CAAC,EAAE;IAC1B,IAAIC,MAAM,GAAG,MAAMJ,cAAc,EAAE;IACnCU,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,aAAa,EAAEC,MAAM,CAACE,IAAI,CAAC;IACtC;EACJ;AACJ,CAAC;;AAED;AACA,MAAMM,SAAS,GAAG;EACdC,YAAY,CAACC,KAAK,EAAEZ,YAAY,EAAE;IAC9BY,KAAK,CAACZ,YAAY,GAAGA,YAAY;EACrC,CAAC;EACDa,aAAa,CAACD,KAAK,EAAEE,UAAU,EAAE;IAC7BF,KAAK,CAACE,UAAU,GAAGA,UAAU;EACjC,CAAC;EACDC,eAAe,CAACH,KAAK,EAAEI,eAAe,EAAE;IACpCJ,KAAK,CAACI,eAAe,GAAGA,eAAe;EAC3C,CAAC;EAEDC,WAAW,CAACL,KAAK,EAAEM,QAAQ,EAAE;IACzBN,KAAK,CAACM,QAAQ,GAAGA,QAAQ;EAC7B;AACJ,CAAC;;AAED;AACA;AACA,MAAMN,KAAK,GAAG;EACV;EACAZ,YAAY,EAAE,EAAE;EAChB;EACAc,UAAU,EAAE,EAAE;EACd;EACAE,eAAe,EAAE,EAAE;EACnBE,QAAQ,EAAE;AACd,CAAC;;AAED;AACA;AACA,MAAMC,OAAO,GAAG,CAAC,CAAC;;AAElB;AACA,eAAe;EACXpB,OAAO;EACPW,SAAS;EACTE,KAAK;EACLO;AACJ,CAAC"},"metadata":{},"sourceType":"module"}