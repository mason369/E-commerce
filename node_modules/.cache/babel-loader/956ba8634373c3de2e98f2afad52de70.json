{"ast":null,"code":"import { reqAddOrUpdateShopCart, reqGoodsInfo } from \"@/api\";\n//封装临时身份的模块\nimport { getUUID } from '@/utils/uuid_token';\nconst actions = {\n  //获取产品信息\n  async getGoodsInfo({\n    commit\n  }, skuId) {\n    let result = await reqGoodsInfo(skuId);\n    if (result.code === 200) {\n      commit(\"GETGOODSINFO\", result.data);\n    }\n  },\n  //将产品添加到购物车中\n  //加入购物车以后（发请求），前台将参数带给服务器\n  //服务器写入数据成功，并没有返回其他的数据，只是返回code=200，代表这次操作成功\n  async addOrUpdateShopCart({\n    commit\n  }, {\n    skuId,\n    skuNum\n  }) {\n    //加入购物车的解构\n    let result = await reqAddOrUpdateShopCart(skuId, skuNum);\n    if (result.code == 200) {\n      //代表加入购物车成功\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  }\n};\nconst mutations = {\n  GETGOODSINFO(state, goodsInfo) {\n    state.goodsInfo = goodsInfo;\n  }\n};\nconst state = {\n  goodsInfo: {},\n  //游客的临时身份\n  uuid_token: getUUID()\n};\nconst getters = {\n  //state.goodInfo初始状态空对象，空对象的categoryView属性值undefined\n  categoryView(state) {\n    //当前计算出的categoryview属性值至少是一个空对象，假的报错不会有\n    return state.goodsInfo.categoryView || {};\n  },\n  skuInfo(state) {\n    return state.goodsInfo.skuInfo || {};\n  }\n};\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};","map":{"version":3,"names":["reqAddOrUpdateShopCart","reqGoodsInfo","getUUID","actions","getGoodsInfo","commit","skuId","result","code","data","addOrUpdateShopCart","skuNum","Promise","reject","Error","mutations","GETGOODSINFO","state","goodsInfo","uuid_token","getters","categoryView","skuInfo"],"sources":["D:/E-commerce/src/store/detail/index.js"],"sourcesContent":["import { reqAddOrUpdateShopCart, reqGoodsInfo } from \"@/api\";\n//封装临时身份的模块\nimport {getUUID} from '@/utils/uuid_token'\nconst actions = {\n    //获取产品信息\n    async getGoodsInfo({ commit }, skuId) {\n        let result = await reqGoodsInfo(skuId);\n        if (result.code === 200) {\n            commit(\"GETGOODSINFO\", result.data);\n        }\n    },\n    //将产品添加到购物车中\n    //加入购物车以后（发请求），前台将参数带给服务器\n    //服务器写入数据成功，并没有返回其他的数据，只是返回code=200，代表这次操作成功\n    async addOrUpdateShopCart({ commit }, { skuId, skuNum }) {\n        //加入购物车的解构\n        let result = await reqAddOrUpdateShopCart(skuId, skuNum);\n\n        if (result.code == 200) {\n            //代表加入购物车成功\n            return \"ok\";\n        } else {\n            return Promise.reject(new Error(\"faile\"));\n        }\n    },\n};\nconst mutations = {\n    GETGOODSINFO(state, goodsInfo) {\n        state.goodsInfo = goodsInfo;\n    },\n};\nconst state = {\n    goodsInfo: {},\n    //游客的临时身份\n    uuid_token: getUUID(),\n};\nconst getters = {\n    //state.goodInfo初始状态空对象，空对象的categoryView属性值undefined\n    categoryView(state) {\n        //当前计算出的categoryview属性值至少是一个空对象，假的报错不会有\n        return state.goodsInfo.categoryView || {};\n    },\n    skuInfo(state) {\n        return state.goodsInfo.skuInfo || {};\n    },\n};\n\nexport default {\n    state,\n    actions,\n    mutations,\n    getters,\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,YAAY,QAAQ,OAAO;AAC5D;AACA,SAAQC,OAAO,QAAO,oBAAoB;AAC1C,MAAMC,OAAO,GAAG;EACZ;EACA,MAAMC,YAAY,CAAC;IAAEC;EAAO,CAAC,EAAEC,KAAK,EAAE;IAClC,IAAIC,MAAM,GAAG,MAAMN,YAAY,CAACK,KAAK,CAAC;IACtC,IAAIC,MAAM,CAACC,IAAI,KAAK,GAAG,EAAE;MACrBH,MAAM,CAAC,cAAc,EAAEE,MAAM,CAACE,IAAI,CAAC;IACvC;EACJ,CAAC;EACD;EACA;EACA;EACA,MAAMC,mBAAmB,CAAC;IAAEL;EAAO,CAAC,EAAE;IAAEC,KAAK;IAAEK;EAAO,CAAC,EAAE;IACrD;IACA,IAAIJ,MAAM,GAAG,MAAMP,sBAAsB,CAACM,KAAK,EAAEK,MAAM,CAAC;IAExD,IAAIJ,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpB;MACA,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7C;EACJ;AACJ,CAAC;AACD,MAAMC,SAAS,GAAG;EACdC,YAAY,CAACC,KAAK,EAAEC,SAAS,EAAE;IAC3BD,KAAK,CAACC,SAAS,GAAGA,SAAS;EAC/B;AACJ,CAAC;AACD,MAAMD,KAAK,GAAG;EACVC,SAAS,EAAE,CAAC,CAAC;EACb;EACAC,UAAU,EAAEjB,OAAO;AACvB,CAAC;AACD,MAAMkB,OAAO,GAAG;EACZ;EACAC,YAAY,CAACJ,KAAK,EAAE;IAChB;IACA,OAAOA,KAAK,CAACC,SAAS,CAACG,YAAY,IAAI,CAAC,CAAC;EAC7C,CAAC;EACDC,OAAO,CAACL,KAAK,EAAE;IACX,OAAOA,KAAK,CAACC,SAAS,CAACI,OAAO,IAAI,CAAC,CAAC;EACxC;AACJ,CAAC;AAED,eAAe;EACXL,KAAK;EACLd,OAAO;EACPY,SAAS;EACTK;AACJ,CAAC"},"metadata":{},"sourceType":"module"}