{"ast":null,"code":"//search模块仓库\n// //创建actions(本质就是对象) 用于响应组件中的动作\n/* eslint-disable */\nimport { reqGetSearchInfo } from \"@/api\";\nimport async from \"async\";\nconst actions = {\n  //收到上下文对象(包含commit)和dispatch过来的值\n  //获取search模块数据\n  async getSearchList({\n    commit\n  }, params = {}) {\n    //当前这个reqGetSearchInfo这个函数在调用获取服务器数据的时候，至少传递一个参数（空对象）\n    //params形参:是当用户派发action的时候，第二个参数传递过来的，至少是一个空对象\n    let result = await reqGetSearchInfo(params);\n    if (result.code == 200) {\n      commit(\"GETSEARCHLIST\", result.data);\n    }\n  }\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {\n  GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {\n  // 仓库初始状态\n  searchList: {}\n};\n\n// //准备getters用于加工state，将其共享于各个组件当中\n//项目当中getters主要的作用是:简化仓库中的数据(简化数据而生)\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\nconst getters = {\n  //当前形参state，当前仓库中的state，并非大仓库中的那个state\n  goodsList(state) {\n    //state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\n    //假如网络不给力|没有网state.searchList.goodsList应该返回的是undefined\n    //计算新的属性的属性值至少给人家来一个数组\n    return state.searchList.goodsList || [];\n  },\n  trademarkList(state) {\n    return state.searchList.trademarkList || [];\n  },\n  attrsList(state) {\n    return state.searchList.attrsList || [];\n  }\n};\n\n// //创建并暴露store\nexport default {\n  actions,\n  mutations,\n  state,\n  getters\n};","map":{"version":3,"names":["reqGetSearchInfo","async","actions","getSearchList","commit","params","result","code","data","mutations","GETSEARCHLIST","state","searchList","getters","goodsList","trademarkList","attrsList"],"sources":["D:/E-commerce/src/store/search/index.js"],"sourcesContent":["//search模块仓库\n// //创建actions(本质就是对象) 用于响应组件中的动作\n/* eslint-disable */\nimport { reqGetSearchInfo } from \"@/api\";\nimport async from \"async\";\nconst actions = {\n    //收到上下文对象(包含commit)和dispatch过来的值\n    //获取search模块数据\n    async getSearchList({ commit }, params = {}) {\n        //当前这个reqGetSearchInfo这个函数在调用获取服务器数据的时候，至少传递一个参数（空对象）\n        //params形参:是当用户派发action的时候，第二个参数传递过来的，至少是一个空对象\n        let result = await reqGetSearchInfo(params);\n        if (result.code == 200) {\n            commit(\"GETSEARCHLIST\", result.data);\n        }\n    },\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {\n    GETSEARCHLIST(state, searchList) {\n        state.searchList = searchList;\n    },\n};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {\n    // 仓库初始状态\n    searchList: {},\n};\n\n// //准备getters用于加工state，将其共享于各个组件当中\n//项目当中getters主要的作用是:简化仓库中的数据(简化数据而生)\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\nconst getters = {\n    //当前形参state，当前仓库中的state，并非大仓库中的那个state\n    goodsList(state) {\n        //state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\n        //假如网络不给力|没有网state.searchList.goodsList应该返回的是undefined\n        //计算新的属性的属性值至少给人家来一个数组\n        return state.searchList.goodsList || [];\n    },\n    trademarkList(state) {\n        return state.searchList.trademarkList || [];\n    },\n    attrsList(state) {\n        return state.searchList.attrsList || [];\n    },\n};\n\n// //创建并暴露store\nexport default {\n    actions,\n    mutations,\n    state,\n    getters,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG;EACZ;EACA;EACA,MAAMC,aAAa,CAAC;IAAEC;EAAO,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;IACzC;IACA;IACA,IAAIC,MAAM,GAAG,MAAMN,gBAAgB,CAACK,MAAM,CAAC;IAC3C,IAAIC,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBH,MAAM,CAAC,eAAe,EAAEE,MAAM,CAACE,IAAI,CAAC;IACxC;EACJ;AACJ,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG;EACdC,aAAa,CAACC,KAAK,EAAEC,UAAU,EAAE;IAC7BD,KAAK,CAACC,UAAU,GAAGA,UAAU;EACjC;AACJ,CAAC;;AAED;AACA;AACA,MAAMD,KAAK,GAAG;EACV;EACAC,UAAU,EAAE,CAAC;AACjB,CAAC;;AAED;AACA;AACA;AACA,MAAMC,OAAO,GAAG;EACZ;EACAC,SAAS,CAACH,KAAK,EAAE;IACb;IACA;IACA;IACA,OAAOA,KAAK,CAACC,UAAU,CAACE,SAAS,IAAI,EAAE;EAC3C,CAAC;EACDC,aAAa,CAACJ,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACC,UAAU,CAACG,aAAa,IAAI,EAAE;EAC/C,CAAC;EACDC,SAAS,CAACL,KAAK,EAAE;IACb,OAAOA,KAAK,CAACC,UAAU,CAACI,SAAS,IAAI,EAAE;EAC3C;AACJ,CAAC;;AAED;AACA,eAAe;EACXd,OAAO;EACPO,SAAS;EACTE,KAAK;EACLE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}